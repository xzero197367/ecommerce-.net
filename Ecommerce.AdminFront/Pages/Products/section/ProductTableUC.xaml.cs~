
using Ecommerce.DTOs;
using Mapster;
using System.Windows;
using System.Windows.Controls;

namespace Ecommerce.AdminFront.Pages.Products.sections
{

    public partial class ProductTableUC : UserControl
    {
        public Func<Task> RefreshProducts { get; set; } = () => Task.CompletedTask;
        public Func<int, Task<(bool status, string message)>> OnDeleteProduct { get; set; } = (id) => Task.FromResult((false, "Error occurred while deleting the product. Please try again later."));

        public Func< ProductDto, Task<(bool status, string message)>> OnUpdateProduct { get; set; } = ( dto) => Task.FromResult((false, "Error occurred while updating from table the product. Please try again later."));

        private PopupWindow popupWindow;
        private ProductFromUC productFrom;

        public ProductTableUC()
        {
            InitializeComponent();
            productListView.DataContext = new List<string>();
        }

        private async void delete_product_click(object sender, System.Windows.RoutedEventArgs e)
        {
            ProductDto product = ((sender as Button).DataContext as ProductDto)!;
            var res = await OnDeleteProduct.Invoke(product.ProductId);
            //MessageBox.Show(res.message);
            await RefreshProducts.Invoke();
        }

        private async void edit_product_click(object sender, System.Windows.RoutedEventArgs e)
        {
            ProductDto product = ((sender as Button).DataContext as ProductDto)!;
            popupWindow = new PopupWindow();
            productFrom = new ProductFromUC()
            {
                onSaveAction = async delegate (ProductDto dto) {
                    var res = await OnUpdateProduct(product.ProductId, dto);
                    popupWindow.Close();
                    return res;
                },
                AfterSaveAction = async () =>
                {
                    popupWindow.Close();
                    await RefreshProducts.Invoke();
                },
                productCreateDto = product.Adapt<ProductDto>(),
            };
            productFrom.btnSave.Content = "Update";
            popupWindow.containerGrid.Children.Add(productFrom);
            popupWindow.SizeToContent = SizeToContent.WidthAndHeight;
            popupWindow.ShowDialog();
            //await RefreshProducts.Invoke();
        }
    }
}
